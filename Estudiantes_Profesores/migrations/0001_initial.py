# Generated by Django 3.2.9 on 2022-09-23 18:48

import Estudiantes_Profesores.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Niveles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=150, verbose_name='nombre completo')),
                ('fecha_nacimiento', models.DateField(verbose_name='fecha de nacimiento')),
                ('documento', models.CharField(max_length=18, unique=True, verbose_name='numero de documento')),
                ('celular', models.CharField(max_length=10, verbose_name='numero de celular')),
                ('telefono', models.CharField(max_length=10, verbose_name='numero de telefono')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electronico')),
                ('direccion', models.CharField(max_length=500, verbose_name='direccion de residencia')),
                ('barrio', models.CharField(max_length=500, verbose_name='barrio de resdencia')),
                ('ciudad', models.CharField(max_length=150, verbose_name='ciudad de residencia')),
                ('seguro_medico', models.BooleanField(verbose_name='tiene seguro medico')),
                ('documento_identidad', models.BooleanField(verbose_name='tiene documento de identidad')),
                ('nombre_completo_acudiente', models.CharField(max_length=150, verbose_name='nombre completo del acudiente')),
                ('cedula_acudiente', models.CharField(max_length=18, unique=True, verbose_name='numero de cedula acudiente')),
                ('lugar_expedicion_acudiente', models.CharField(max_length=500, verbose_name='lugar de expedicion de la cedula del acudiente')),
                ('celular_acudiente', models.CharField(max_length=10, verbose_name='numero de celular acudiente ')),
                ('email_acudiente', models.EmailField(max_length=254, unique=True, verbose_name='correo electronico acudiente')),
                ('nombre_contactoE', models.CharField(max_length=10, verbose_name='nombre del contacto de emergencia')),
                ('telefono_contactoE', models.CharField(max_length=10, verbose_name='telefono del contacto de emergencia')),
                ('relacion_contactoE', models.CharField(max_length=100, verbose_name='relacion con el alumno')),
                ('firma', models.FileField(upload_to=Estudiantes_Profesores.models.guardar_firma)),
                ('documento_A', models.FileField(upload_to=Estudiantes_Profesores.models.guardar_documento)),
                ('seguro_A', models.FileField(upload_to=Estudiantes_Profesores.models.guardar_seguro)),
                ('estado', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'estudiantes',
            },
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('horarios', models.CharField(max_length=300, verbose_name='horarios del profesor')),
                ('trabaja_sabado', models.BooleanField(default=False, verbose_name='el profesor trabaja los sabados')),
                ('niveles', models.ManyToManyField(to='Niveles.Nivel')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'profesores',
                'db_table': 'profesores',
            },
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagado', models.BooleanField(default=False)),
                ('inicioClase', models.DateField()),
                ('finClase', models.DateField()),
                ('horaClase', models.TimeField()),
                ('diaClase', multiselectfield.db.fields.MultiSelectField(choices=[('1', 'Lunes'), ('2', 'Martes'), ('3', 'Miércoles'), ('4', 'Jueves'), ('5', 'Viernes'), ('6', 'Sábado'), ('0', 'Domingo')], max_length=10)),
                ('estudiante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Estudiantes_Profesores.estudiante')),
                ('nivel', models.ForeignKey(db_column='nivel_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Niveles.nivel', verbose_name='nivel del estudiante')),
                ('profesor', models.ForeignKey(db_column='profesor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Estudiantes_Profesores.profesor', verbose_name='profesor del estudiante')),
            ],
            options={
                'db_table': 'registros',
            },
        ),
        migrations.CreateModel(
            name='Establo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estudiantes', models.ManyToManyField(to='Estudiantes_Profesores.Estudiante')),
                ('profesores', models.ManyToManyField(to='Estudiantes_Profesores.Profesor')),
            ],
            options={
                'db_table': 'establos',
            },
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('1', 'Asistió'), ('2', 'No asistió\xa0'), ('3', 'Cancelo')], max_length=15)),
                ('dia', models.DateField()),
                ('hora', models.TimeField()),
                ('registro', models.ForeignKey(db_column='estudiante_id', on_delete=django.db.models.deletion.CASCADE, to='Estudiantes_Profesores.registro', verbose_name='estudiante')),
            ],
        ),
    ]
